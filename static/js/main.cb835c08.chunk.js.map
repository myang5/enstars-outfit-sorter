{"version":3,"sources":["Sidebar.js","TeamBuilder.js","OutfitList.js","sheetsCreds.js","Gsx2json.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","React","Component","props","state","activeMenu","filters","toggleMenu","bind","setsArr","this","getSetsFromOutfitArray","data","setState","outfitsArr","Array","length","i","Set","add","row","j","menu","reduce","accumulator","set","arr","from","attr","indexOf","heading","selKey","optionsArr","sort","a","b","valA","isNaN","toUpperCase","Number","valB","push","key","isMenuActive","submitSelection","submitFilterSelection","id","className","SearchType","toggleTrue","toggleFalse","CheckBoxOptions","selected","toggleOption","option","newSet","has","delete","options","map","CheckBox","type","onClick","toLowerCase","name","defaultChecked","htmlFor","Filter","clearSelect","selectAll","clearFilter","slice","index","splice","size","FilterMenu","SelectOptions","OutfitList","error","isLoading","hasMore","loadedOutfits","outfitsToLoad","onScroll","loadOutfits","onScrollThrottled","throttle","toggleSidebar","document","querySelector","classList","toggle","console","log","event","persist","target","window","innerHeight","scrollTop","scrollHeight","concat","outfits","elt","view","OutfitRow","Character","Outfit","info","OutfitCard","selAttr","placeholders","status","queryStr","OutfitImage","imageId","AttrList","Object","keys","style","width","imageUrl","src","apiKey","spreadsheetId","matchFilters","query","headers","queriedHeader","replace","queriedValue","convertArraysToObjects","arrs","result","newRow","header","value","Main","jobData","isInclusive","prepareOutfitData","calculateTotalBonus","toggleSearchTypeTrue","toggleSearchTypeFalse","fetch","then","json","values","newState","forEach","filter","queryConfig","config","queried","currVal","filterData","sortByFilter","attrSet","outfitObj","total","isAscending","includes","outfitListProps","sidebarProps","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cb835c08.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeMenu: '',\r\n      filters: null,\r\n    }\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const setsArr = this.getSetsFromOutfitArray(this.props.data);\r\n    this.setState({ filters: setsArr });\r\n  }\r\n\r\n  getSetsFromOutfitArray(outfitsArr) {\r\n    //console.log(outfitsArr);\r\n    const setsArr = new Array(outfitsArr[0].length);\r\n    for (let i = 0; i < setsArr.length; i++) { setsArr[i] = new Set() }; //fill with empty Sets\r\n    for (let i = 0; i < outfitsArr[0].length; i++) { setsArr[i].add(outfitsArr[0][i]) } //add header to Set\r\n    for (let i = 1; i < outfitsArr.length; i++) { //first row is headers\r\n      const row = outfitsArr[i];\r\n      for (let j = 0; j < row.length; j++) {\r\n        setsArr[j].add(row[j]);\r\n      }\r\n    }\r\n    //pop unwanted sets\r\n    return setsArr;\r\n  }\r\n\r\n  toggleMenu(menu) {\r\n    this.setState((state, props) => { return { activeMenu: state.activeMenu === menu ? '' : menu } })\r\n  }\r\n\r\n\r\n\r\n  //return (\r\n  //  <div id='sidebar' className='toggledOn'>\r\n  //    {/* <SearchButton /> */}\r\n  //    <CheckBoxOptions id='attrOpts' heading='Stat Bonus' optionsArr={props.attributes} selected={props.selAttr} toggleValue={toggleValue('selAttr')} mapFunc={attrMapFunc} />\r\n  //    <div className='options'><p>Filter data by...</p></div>\r\n  //    <SearchType toggleTrue={props.toggleTrue} toggleFalse={props.toggleFalse} />\r\n  //    <SelectOptions id='unitOpts' heading='Unit' optionsArr={props.units} selected={props.selUnits} toggleValue={toggleValue('selUnits')} clearFilter={props.clearFilter('selUnits')} />\r\n  //    <SelectOptions id='charaOpts' heading='Character' optionsArr={props.characters} selected={props.selCharas} toggleValue={toggleValue('selCharas')} clearFilter={props.clearFilter('selCharas')} />\r\n  //    <CheckBoxOptions id='tierOpts' heading='Outfit Tier' optionsArr={props.outfitTiers} selected={props.selTiers} toggleValue={toggleValue('selTiers')} mapFunc={tierMapFunc} />\r\n  //    <SelectOptions id='outfitOpts' heading='Outfit Type' optionsArr={props.outfitTypes} selected={props.selOutfits} toggleValue={toggleValue('selOutfits')} clearFilter={props.clearFilter('selOutfits')} />\r\n  //  </div>\r\n  //)\r\n  render() {\r\n    if (this.state.filters) {\r\n      const filters = this.state.filters.reduce((accumulator, set) => { //data is Array of Sets of unique values in each column\r\n        const arr = Array.from(set);\r\n        if (arr[0] !== 'ImageID' && this.props.attr.indexOf(arr[0]) < 0) {\r\n          const heading = arr[0];\r\n          const selKey = 'sel' + heading;\r\n          const optionsArr = Array.from(new Set(arr)).sort((a, b) => {\r\n            const valA = isNaN(a) ? a.toUpperCase() : Number(a); //ignores case\r\n            const valB = isNaN(b) ? b.toUpperCase() : Number(b);\r\n            if (valA < valB) { return -1; }\r\n            if (valA > valB) { return 1; }\r\n            return 0;\r\n          });\r\n          accumulator.push(\r\n            <Filter key={heading}\r\n              heading={heading}\r\n              isMenuActive={this.state.activeMenu === heading}\r\n              toggleMenu={() => (this.toggleMenu(heading))}\r\n              optionsArr={optionsArr}\r\n              submitSelection={this.props.submitFilterSelection(selKey)}\r\n            />\r\n          );\r\n        }\r\n        return accumulator;\r\n      }, []);\r\n      //console.log(filters);\r\n      return (\r\n        <div id='sidebar' className='toggledOn'>\r\n          <div className='filterHeading filter'><p>Stat Bonus</p></div>\r\n          <CheckBoxOptions optionsArr={this.props.attr} submitSelection={this.props.submitFilterSelection('selAttr')} />\r\n          <div className='filterHeading filter'><p>Filter data by...</p></div>\r\n          <SearchType toggleTrue={this.props.toggleTrue} toggleFalse={this.props.toggleFalse} />\r\n          {filters}\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n    else return null;\r\n  }\r\n}\r\n\r\nclass CheckBoxOptions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selected: new Set() };\r\n    this.toggleOption = this.toggleOption.bind(this);\r\n  }\r\n\r\n  toggleOption(option) {\r\n    const newSet = this.state.selected; //not actually creating a new Set copy?\r\n    if (this.state.selected.has(option)) { newSet.delete(option) }\r\n    else { newSet.add(option); }\r\n    this.setState({ selected: newSet }, this.props.submitSelection(this.state.selected));\r\n  }\r\n\r\n  render() {\r\n    const attrMapFunc = (option) => {\r\n      return <CheckBox key={option} option={option} toggleOption={() => this.toggleOption(option)} />\r\n      //return (\r\n      //  <span key={option} className={'icon ' + option.toLowerCase()} onClick={() => this.toggleOption(option)}>\r\n      //    {option}\r\n      //  </span>\r\n      //)\r\n    }\r\n    const options = this.props.optionsArr.map(attrMapFunc);\r\n    return (\r\n      <div className='filter attrOptions'>\r\n        {options}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction CheckBox(props) {\r\n  return (\r\n    <div>\r\n      <input type='checkbox' onClick={props.toggleOption} />\r\n      <span className={'icon ' + props.option.toLowerCase()}>{props.option}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SearchType(props) {\r\n  return (\r\n    <div className='filter'>\r\n      <div className='radioBtn'>\r\n        <input type='radio' name='searchType' id='false' onClick={props.toggleFalse} defaultChecked />\r\n        <label htmlFor='false'>Strict match <br /><span className='desc'>(find outfits that match all search criteria)</span></label>\r\n      </div>\r\n      <div className='radioBtn'>\r\n        <input type='radio' name='searchType' id='true' onClick={props.toggleTrue} />\r\n        <label htmlFor='true'>Inclusive match <br /><span className='desc'>(find outfits that match 1 or more criteria)</span></label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selected: new Set() };\r\n    this.toggleOption = this.toggleOption.bind(this);\r\n    this.clearSelect = this.clearSelect.bind(this);\r\n    this.selectAll = this.selectAll.bind(this);\r\n    this.clearFilter = this.clearFilter.bind(this);\r\n  }\r\n\r\n  toggleOption(option) {\r\n    const newSet = this.state.selected; //not actually creating a new Set copy?\r\n    if (this.state.selected.has(option)) {\r\n      newSet.delete(option);\r\n    }\r\n    else {\r\n      newSet.add(option);\r\n    }\r\n    this.setState({ selected: newSet });\r\n  }\r\n\r\n  clearSelect() {\r\n    this.setState({ selected: new Set() })\r\n  }\r\n\r\n  selectAll() {\r\n    let optionsArr = this.props.optionsArr.slice();\r\n    const index = optionsArr.indexOf(this.props.heading);\r\n    optionsArr.splice(index, 1);\r\n    this.setState({ selected: new Set(optionsArr) })\r\n  }\r\n\r\n  clearFilter() {\r\n    this.clearSelect();\r\n    this.props.submitSelection(new Set());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='filter'>\r\n        <div className='filterHeading'>\r\n          <p className='filterIcon' onClick={this.props.toggleMenu}>⯆</p>\r\n          <p onClick={this.props.toggleMenu}>{this.props.heading}</p>\r\n          {this.state.selected.size > 0 && <a onClick={this.clearFilter}>clear filter</a>}\r\n        </div>\r\n        {this.props.isMenuActive &&\r\n          <FilterMenu heading={this.props.heading}\r\n            optionsArr={this.props.optionsArr}\r\n            selected={this.state.selected}\r\n            submitSelection={() => this.props.submitSelection(this.state.selected)}\r\n            toggleMenu={this.props.toggleMenu}\r\n            toggleOption={this.toggleOption}\r\n            clearSelect={this.clearSelect}\r\n            selectAll={this.selectAll} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass FilterMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='filterMenu'>\r\n        <div>\r\n          <button className='clearBtn' onClick={this.props.clearSelect}>Clear</button>\r\n          <button className='selectAllBtn' onClick={this.props.selectAll}>Select All</button>\r\n        </div>\r\n        <SelectOptions heading={this.props.heading}\r\n          optionsArr={this.props.optionsArr}\r\n          selected={this.props.selected}\r\n          toggleOption={this.props.toggleOption} />\r\n        <div>\r\n          <button className='submitBtn' onClick={() => { this.props.toggleMenu(); this.props.submitSelection() }}>OK</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction SelectOptions(props) {\r\n  let optionsArr = props.optionsArr.slice(0); //needed to create a real new (shallow) copy of the array\r\n  if (optionsArr.indexOf(props.heading) > -1) { optionsArr.splice(optionsArr.indexOf(props.heading), 1, '') }\r\n  const options = optionsArr.map(function (option) {\r\n    if (option) {\r\n      return (\r\n        <li key={option}\r\n          className={props.selected.has(option) ? 'selected' : ''}\r\n          onClick={() => props.toggleOption(option)}>\r\n          <div><span></span>{option}</div>\r\n        </li>)\r\n    }\r\n  });\r\n  return (\r\n    <ul>\r\n      {options}\r\n    </ul>\r\n  )\r\n}\r\n\r\n//function SelectOptions(props) {\r\n//  if (props.optionsArr.indexOf(props.heading) > -1) { props.optionsArr.splice(props.optionsArr.indexOf(props.heading), 1, '') }\r\n//  const options = props.optionsArr.map(function (option) {\r\n//    if (option) { return <option key={option} value={option}>{option}</option> }\r\n//  });\r\n//  const selected = Array.from(props.selected).map((value) =>\r\n//    <ToggleOptionBtn key={value} value={value} toggleValue={props.toggleValue} />\r\n//  );\r\n\r\n//  return (\r\n//    <div className='options' id={props.id}>\r\n//      <div className='row'>\r\n//        <p>{props.heading}</p>\r\n//        <ClearFilterButton clearFilter={props.clearFilter} />\r\n//      </div>\r\n//      <select className='row' defaultValue='none' onChange={props.toggleValue}>\r\n//        <option disabled value='none'>(select an option)</option>\r\n//        {options}\r\n//      </select>\r\n//      <div>{selected}</div>\r\n//    </div>\r\n//  )\r\n//}\r\n\r\n\r\n","import React from 'react';\r\n\r\n//receive list of jobs from Main\r\n//Spreadsheet columns:\r\n//Type\tJob\tJob JP\tConditions\tIdol Slots\tAc\tPa\tUn\tSm\tTe\tCh\tOutfit Drops\tOutfit Drops\r\n//Only allow\r\n\r\nexport default class TeamBuilder extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedJob: null,\r\n    }\r\n  }\r\n  render () {\r\n    console.log('TeamBuilder render', this.props.jobs)\r\n    return (\r\n      null\r\n      //<div id='teamBuilder'></div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//mimic Work menu in-game\r\nclass JobList extends React.Component {\r\n\r\n}\r\n\r\nclass Job extends React.Component {\r\n\r\n}\r\n\r\nclass TeamMember extends React.Component {\r\n\r\n}\r\n\r\n  ","import React from 'react';\r\nimport throttle from 'lodash.throttle';\r\n\r\nexport default class OutfitList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n      isLoading: false,\r\n      hasMore: true,\r\n      loadedOutfits: [],\r\n      outfitsToLoad: 40,\r\n    };\r\n    this.onScroll = this.onScroll.bind(this);\r\n    this.loadOutfits = this.loadOutfits.bind(this);\r\n    this.onScrollThrottled = throttle(this.onScroll, 100);\r\n    this.toggleSidebar = () => {\r\n      document.querySelector('#sidebar').classList.toggle('toggledOn');\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('OutfitList componentDidMount');\r\n    this.loadOutfits();\r\n  }\r\n\r\n  //modified from this tutorial: https://alligator.io/react/react-infinite-scroll/\r\n  //and also this https://blog.bitsrc.io/improve-your-react-app-performance-by-using-throttling-and-debouncing-101afbe9055\r\n  onScroll(event) {\r\n    event.persist() //didn't work without this \r\n\r\n    //Bails early if:\r\n    //* it's already loading\r\n    //* there's nothing left to load\r\n    //console.log(this.state.isLoading, this.state.hasMore);\r\n    if (this.state.isLoading || !this.state.hasMore) { return; }\r\n\r\n    //Checks that the page has scrolled to the bottom\r\n    if (event.target) {\r\n      if (window.innerHeight + event.target.scrollTop >= event.target.scrollHeight - 600) {\r\n        //console.log('loading more');\r\n        this.loadOutfits();\r\n      }\r\n    }\r\n  }\r\n\r\n  loadOutfits() {\r\n    this.setState({ isLoading: true }, () => {\r\n      this.setState((state, props) => {\r\n        let loadedOutfits = state.loadedOutfits;\r\n        loadedOutfits = loadedOutfits.concat(props.outfits.slice(state.loadedOutfits.length, state.loadedOutfits.length + state.outfitsToLoad));\r\n        const hasMore = loadedOutfits.length < props.outfits.length;\r\n        //console.log('after loadOutfits', loadedOutfits);\r\n        return { hasMore: hasMore, isLoading: false, loadedOutfits: loadedOutfits };\r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const outfits = this.state.loadedOutfits.map((elt) =>\r\n      this.props.view === 'sheet' ?\r\n        <OutfitRow key={elt.Character + elt.Outfit + elt['Total Bonus']} info={elt} /> :\r\n        <OutfitCard key={elt.Character + elt.Outfit + elt['Total Bonus']} info={elt} attr={this.props.attr} selAttr={this.props.selAttr} />\r\n    );\r\n    //console.log('finished loading outfit list', performance.now())\r\n    let placeholders = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      placeholders.push(<div key={i} className=\"outfit-placeholder\"></div>)\r\n    }\r\n    console.log('OutfitList render');\r\n    //console.log('loaded Outfits', this.state.loadedOutfits)\r\n    return (\r\n      <div id='outfitView' onScroll={this.onScrollThrottled}>\r\n        <div id='toggleSidebarBtn' onClick={this.toggleSidebar}></div>\r\n        {this.props.view === 'card' && <p className='status'>{this.props.status}</p>}\r\n        <div key={this.props.queryStr} id='outfitList' className={this.props.view}>\r\n          {outfits}\r\n          {this.props.view === 'card' && placeholders}\r\n        </div>\r\n        {!this.state.hasMore && this.props.view === 'card' &&\r\n          <p className='status'>End of results</p>\r\n        }\r\n      </div>\r\n    )\r\n    //return (\r\n    //  <div className={'outfitView ' + this.props.view} onScroll={this.onScrollThrottled}>\r\n    //    {/*<div id='toggleSidebarBtn' onClick={this.toggleSidebar}></div>*/}\r\n    //    {this.props.view === 'card' && <p className='status'>{this.props.status}</p>}\r\n    //    <div id='outfitList'>\r\n    //      {outfits}\r\n    //      {placeholders}\r\n    //    </div>\r\n    //    {!this.state.hasMore && this.props.view === 'card' &&\r\n    //      <p className='status'>End of results</p>\r\n    //    }\r\n    //  </div>\r\n    //)\r\n  }\r\n}\r\n\r\nfunction OutfitCard(props) {\r\n  return (\r\n    <div className='outfitCard'>\r\n      <p>{props.info['Character']}</p>\r\n      <p>{props.info['Outfit']}</p>\r\n      <hr />\r\n      <div className='rowContainer'>\r\n        <OutfitImage imageId={props.info['ImageID']} />\r\n        <AttrList attr={props.attr} info={props.info} />\r\n      </div>\r\n      {('Total Bonus' in props.info) && <span>{`TOTAL BONUS: ${props.info['Total Bonus']}`}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction OutfitRow(props) {\r\n  return (\r\n    <>\r\n      {Object.keys(props.info).map(key => {\r\n        if (key !== 'ImageID') {\r\n          return (\r\n            <div key={key} className='outfitCell'>\r\n              <p>{props.info[key]}</p>\r\n            </div>\r\n          )\r\n        }\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction AttrList(props) {\r\n  const statusBarWidth = 4.2;\r\n  return (\r\n    <div className='attrList'>\r\n      {props.attr.map(attr => { //display all attributes\r\n          return (\r\n            <div className='attr' key={attr + props.info[attr]}>\r\n              <span className={'icon ' + attr.toLowerCase()}>{attr}</span>\r\n              <span className='numberText'>{'+' + props.info[attr]}</span>\r\n              <span className='statusBarContainer' style={{ width: `${statusBarWidth}rem` }}>\r\n                <span className={'statusBar ' + attr.toLowerCase()}\r\n                  style={{ width: `${props.info[attr] / 300 * statusBarWidth}rem` }} />\r\n              </span>\r\n            </div>\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction OutfitImage(props) {\r\n  //OLD METHOD, OutfitImage should now receive the image id directly\r\n  //props link looks like this https://drive.google.com/open?id=IMAGE_ID\r\n  //or it could look like this https://drive.google.com/file/d/IMAGE_ID/view?usp=drivesdk\r\n  //or it could look like this https://drive.google.com/file/d/IMAGE_ID/view\r\n  //need to change it to be    https://drive.google.com/thumbnail?&id=IMAGE_ID\r\n  let imageUrl = null;\r\n  if (props.imageId && props.imageId.toLowerCase() !== 'missing') {\r\n    imageUrl = 'https://drive.google.com/thumbnail?&id=' + props.imageId\r\n    return <img className='outfitImg' src={imageUrl} />\r\n  }\r\n  else return <div className='outfitImg'>Image N/A</div>\r\n}\r\n","export const apiKey = 'AIzaSyBYN0YVkl2lB5ps2CL_74JKIs5TOukXdm4';\r\nexport const spreadsheetId = '1JeHlN1zcBwyBbBkyfsDiiqDZpLotkn770ewa1JCsekU';","export function filterData(data, config = {}) {\n  let query = config.query || {}; //Object with Sets of values selected for each filter\n  const isInclusive = config.isInclusive || false; //whether row should match query with OR (inclusive) or AND (exclusive)\n  const result = [];\n  if (data) { //should be Array of Arrays\n    const headers = data[0]; //first row is header row\n    result.push(headers);\n    console.log('filterGsData', query);\n    for (let i = 1; i < data.length; i++) { //iterate over Array of rows\n      const row = data[i];\n      if (row[0]) { //filter out invalid/empty rows\n        let queried = false;\n        if (Object.keys(query).length === 0) { queried = true; } //if no query just push all rows\n        else {\n          //map which filters match values in the row\n          let result = matchFilters(query, row, headers);\n          if (isInclusive) {\n            //if any filter is matched queried = true\n            queried = result.reduce(function (accumulator, currVal) { return accumulator || currVal }, false);\n          }\n          else { //exclusive \n            //if any filter is not matched queried = false\n            queried = result.reduce(function (accumulator, currVal) { return accumulator && currVal }, true);\n          }\n        }\n        if (queried) {\n          result.push(row);\n        }\n      }\n    }\n    //console.log(responseObj);\n    return result;\n  }\n}\n\n//helper function to map which filters match values in the row\nfunction matchFilters(query, row, headers) {\n  //check if values queried in each filter match the row value at least once\n  const result = Object.keys(query).map((key) => { //for each query Set\n      const queriedHeader = key.replace('sel', ''); //get name of relevant column\n      const set = query[key]; //get query Set from query Object\n      const queriedValue = row[headers.indexOf(queriedHeader)]; //find which index represents the relevant column in the row Array\n      //console.log(queriedValue);\n      if (set.has(queriedValue)) { return true }\n  });\n  return result\n}\n\nexport function convertArraysToObjects(arrs) {\n  const result = [];\n  const headers = arrs[0]; //first row is header row\n  for (let i = 1; i < arrs.length; i++) {\n    const row = arrs[i];\n    const newRow = {};\n    for (let j = 0; j < row.length; j++) { //iterate over values in each row to add headers\n      const header = headers[j];\n      let value = row[j];\n      if (!isNaN(value)) {\n        value = Number(value);\n      }\n      newRow[header] = value;\n    }\n    result.push(newRow);\n  }\n  return result;\n}\n\n","import React from 'react';\r\nimport TeamBuilder from './TeamBuilder.js'\r\nimport SideBar from './Sidebar.js';\r\nimport OutfitList from './OutfitList.js';\r\nimport { apiKey, spreadsheetId } from './sheetsCreds.js';\r\nimport { filterData, convertArraysToObjects } from './Gsx2json.js';\r\n\r\nexport default class Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: null,\r\n      jobData: null,\r\n      attr: ['Ac', 'Pa', 'Un', 'Sm', 'Te', 'Ch'],\r\n      selAttr: new Set(),\r\n      isInclusive: false,\r\n      view: 'card',\r\n    };\r\n    this.prepareOutfitData = this.prepareOutfitData.bind(this)\r\n    this.submitFilterSelection = this.submitFilterSelection.bind(this);\r\n    this.calculateTotalBonus = this.calculateTotalBonus.bind(this);\r\n    this.toggleSearchTypeTrue = this.toggleSearchTypeTrue.bind(this);\r\n    this.toggleSearchTypeFalse = this.toggleSearchTypeFalse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Main componentDidMount')\r\n    const sheetId = 'Stat Bonuses';\r\n    //fetch info for Sidebar\r\n    fetch(`https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${sheetId}?key=${apiKey}`)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        let data = result.values; //Array of Arrays representing sheet rows\r\n        const newState = {};\r\n        data[0].forEach((arr) => { if (arr[0] !== 'ImageID') newState['sel' + arr[0]] = new Set() }) //Create set for each header to keep track of selected values\r\n        newState.data = data;\r\n        this.setState(newState);\r\n      })\r\n    const nextSheetId = 'Jobs';\r\n    //fetch info for TeamBuilder\r\n    fetch(`https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${nextSheetId}?key=${apiKey}`)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        let data = result.values; //Array of Arrays representing sheet rows\r\n        this.setState({ jobData: data });\r\n      })\r\n  }\r\n\r\n  toggleSearchTypeTrue() {\r\n    this.setState({ isInclusive: true })\r\n  }\r\n\r\n  toggleSearchTypeFalse() {\r\n    this.setState({ isInclusive: false })\r\n  }\r\n\r\n  submitFilterSelection(filter) {\r\n    return (value) => {\r\n      console.log('submitFilterSelection', value)\r\n      this.setState({ [filter]: value });\r\n    }\r\n  }\r\n\r\n  prepareOutfitData(data, queryConfig) {\r\n    const filteredData = filterData(data, queryConfig);\r\n    let outfits = convertArraysToObjects(filteredData);\r\n    if (this.state.selAttr.size > 0) {\r\n      outfits = this.calculateTotalBonus(outfits, this.state.selAttr);\r\n      this.sortByFilter(outfits, 'Total Bonus', false);\r\n    }\r\n    return outfits;\r\n  }\r\n\r\n  calculateTotalBonus(outfits, attrSet) { //outfits is Array of Objects of each outfit info\r\n    //console.log(outfits);\r\n    console.log('Main calculateTotalBonus', attrSet);\r\n    outfits.forEach(outfitObj => {\r\n      let total = 0;\r\n      Array.from(attrSet).forEach(attr => total += outfitObj[attr]);\r\n      outfitObj['Total Bonus'] = total;\r\n    });\r\n\r\n    //outfits.sort((a, b) => { //sort from highest to lowest queried stat bonus\r\n    //  let totalBonusA = 0;\r\n    //  let totalBonusB = 0;\r\n    //  for (let attr of this.props.selAttr) {\r\n    //    totalBonusA += a[attr.toLowerCase()];\r\n    //    totalBonusB += b[attr.toLowerCase()];\r\n    //  }\r\n    //  return totalBonusB - totalBonusA;\r\n    //})\r\n    return outfits;\r\n  }\r\n\r\n  sortByFilter(outfits, filter, isAscending = true) {\r\n    if (filter === 'Total Bonus') {\r\n      outfits.sort((a, b) => isAscending ? a[filter] - b[filter] : b[filter] - a[filter])\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('Main render');\r\n    if (this.state.data && this.state.jobData) {\r\n      const query = Object.keys(this.state).reduce((accumulator, key) => { //make Object of Sets that hold selected values\r\n        const value = this.state[key];\r\n        if (key.includes('sel') && key !== 'selAttr' && value.size > 0) { accumulator[key] = value; }\r\n        return accumulator;\r\n      }, {});\r\n      let queryStr = Object.keys(this.state).reduce((accumulator, key) => {\r\n        const value = this.state[key];\r\n        if (key.includes('sel') && value.size > 0) {\r\n          accumulator += key + ':' + Array.from(value) + ' ';\r\n        }\r\n        return accumulator;\r\n      }, '');\r\n      queryStr += `isInclusive: ${this.state.isInclusive}`\r\n      const outfits = this.prepareOutfitData(this.state.data, { query: query, isInclusive: this.state.isInclusive })\r\n      const jobs = convertArraysToObjects(this.state.jobData);\r\n      const teamBuilderProps = {\r\n        jobs: jobs,\r\n      }\r\n      \r\n      const outfitListProps = {\r\n        key: queryStr,\r\n        queryStr: queryStr,\r\n        query: query,\r\n        outfits: outfits,\r\n        view: this.state.view,\r\n        status: `${outfits.length} outfits found`,\r\n        attr: this.state.attr,\r\n        selAttr: this.state.selAttr,\r\n      }\r\n      const sidebarProps = {\r\n        attr: this.state.attr,\r\n        data: this.state.data,\r\n        submitFilterSelection: this.submitFilterSelection,\r\n        toggleTrue: this.toggleSearchTypeTrue,\r\n        toggleFalse: this.toggleSearchTypeFalse,\r\n      }\r\n      return (\r\n        <>\r\n          {/*<TeamBuilder {...teamBuilderProps} />*/}\r\n          <div id='bottomContainer'>\r\n            <SideBar {...sidebarProps} />\r\n            <OutfitList {...outfitListProps} />\r\n          </div>\r\n\r\n        </>\r\n      )\r\n    }\r\n    else return null;\r\n  }\r\n}","import React from 'react';\nimport Main from './Main.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}